// <auto-generated />
using System;
using AmpRageRepo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AmpRageRepo.Migrations
{
    [DbContext(typeof(AmpContext))]
    partial class AmpContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AmpRageRepo.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand");

                    b.Property<decimal>("Capacity");

                    b.Property<decimal>("Efficiency");

                    b.Property<int>("Fastcharge");

                    b.Property<string>("LicensePlate");

                    b.Property<string>("Make");

                    b.Property<int>("Range");

                    b.Property<int>("TopSpeed");

                    b.Property<decimal>("ZeroToHundred");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("AmpRageRepo.Models.Attributes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("regno");

                    b.Property<string>("vin");

                    b.HasKey("Id");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("AmpRageRepo.Models.Basic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("dataId");

                    b.HasKey("Id");

                    b.HasIndex("dataId");

                    b.ToTable("Basic");
                });

            modelBuilder.Entity("AmpRageRepo.Models.Data", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("attributesId");

                    b.Property<int?>("basicId");

                    b.Property<int?>("technicalId");

                    b.Property<string>("type");

                    b.HasKey("Id");

                    b.HasIndex("attributesId");

                    b.HasIndex("basicId");

                    b.HasIndex("technicalId");

                    b.ToTable("Data");
                });

            modelBuilder.Entity("AmpRageRepo.Models.Data2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("color");

                    b.Property<string>("make");

                    b.Property<string>("model");

                    b.Property<int?>("model_year");

                    b.Property<bool>("reused_regno");

                    b.Property<bool?>("status");

                    b.Property<string>("type");

                    b.Property<string>("type_class");

                    b.Property<int?>("vehicle_year");

                    b.HasKey("Id");

                    b.ToTable("Data2");
                });

            modelBuilder.Entity("AmpRageRepo.Models.Data3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("axel_width");

                    b.Property<decimal?>("carriage_weight");

                    b.Property<string>("category");

                    b.Property<string>("chassi");

                    b.Property<decimal?>("chassi_code_1");

                    b.Property<decimal?>("chassi_code_2");

                    b.Property<decimal?>("co2_1");

                    b.Property<decimal?>("co2_2");

                    b.Property<decimal?>("co2_3");

                    b.Property<string>("color");

                    b.Property<decimal?>("consumption_1");

                    b.Property<decimal?>("consumption_2");

                    b.Property<decimal?>("consumption_3");

                    b.Property<decimal?>("cylinder_volume");

                    b.Property<int?>("eco_class");

                    b.Property<string>("eeg");

                    b.Property<int?>("emission_class");

                    b.Property<int?>("euro_ncap");

                    b.Property<bool>("four_wheel_drive");

                    b.Property<decimal?>("fuel_1");

                    b.Property<decimal?>("fuel_2");

                    b.Property<decimal?>("fuel_3");

                    b.Property<decimal?>("fuel_combination");

                    b.Property<decimal?>("height");

                    b.Property<decimal?>("hitch");

                    b.Property<decimal?>("hitch_2");

                    b.Property<decimal?>("kerb_weight");

                    b.Property<decimal?>("length");

                    b.Property<decimal?>("load_weight");

                    b.Property<decimal?>("nox_1");

                    b.Property<decimal?>("nox_2");

                    b.Property<decimal?>("nox_3");

                    b.Property<int>("number_of_passengers");

                    b.Property<bool>("passenger_airbag");

                    b.Property<decimal?>("power_hp_1");

                    b.Property<decimal?>("power_hp_2");

                    b.Property<decimal?>("power_hp_3");

                    b.Property<decimal?>("power_kw_1");

                    b.Property<decimal?>("power_kw_2");

                    b.Property<decimal?>("power_kw_3");

                    b.Property<string>("rim_back");

                    b.Property<string>("rim_front");

                    b.Property<decimal?>("sound_level_1");

                    b.Property<decimal?>("sound_level_2");

                    b.Property<decimal?>("sound_level_3");

                    b.Property<decimal?>("thc_nox_1");

                    b.Property<decimal?>("thc_nox_2");

                    b.Property<decimal?>("thc_nox_3");

                    b.Property<string>("tire_back");

                    b.Property<string>("tire_front");

                    b.Property<decimal?>("top_speed");

                    b.Property<decimal?>("total_weight");

                    b.Property<decimal?>("trailer_weight");

                    b.Property<decimal?>("trailer_weight_b");

                    b.Property<decimal?>("trailer_weight_be");

                    b.Property<int?>("transmission");

                    b.Property<decimal?>("unbraked_trailer_weight");

                    b.Property<decimal?>("width");

                    b.HasKey("Id");

                    b.ToTable("Data3");
                });

            modelBuilder.Entity("AmpRageRepo.Models.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DataId");

                    b.Property<string>("rel");

                    b.Property<string>("uri");

                    b.HasKey("Id");

                    b.HasIndex("DataId");

                    b.ToTable("Link");
                });

            modelBuilder.Entity("AmpRageRepo.Models.RootObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("dataId");

                    b.HasKey("Id");

                    b.HasIndex("dataId");

                    b.ToTable("RootObjects");
                });

            modelBuilder.Entity("AmpRageRepo.Models.SearchedCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand");

                    b.Property<string>("LicensePlate");

                    b.Property<string>("Make");

                    b.HasKey("Id");

                    b.ToTable("SearchedCars");
                });

            modelBuilder.Entity("AmpRageRepo.Models.Technical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("dataId");

                    b.HasKey("Id");

                    b.HasIndex("dataId");

                    b.ToTable("Technical");
                });

            modelBuilder.Entity("AmpRageRepo.Models.Basic", b =>
                {
                    b.HasOne("AmpRageRepo.Models.Data2", "data")
                        .WithMany()
                        .HasForeignKey("dataId");
                });

            modelBuilder.Entity("AmpRageRepo.Models.Data", b =>
                {
                    b.HasOne("AmpRageRepo.Models.Attributes", "attributes")
                        .WithMany()
                        .HasForeignKey("attributesId");

                    b.HasOne("AmpRageRepo.Models.Basic", "basic")
                        .WithMany()
                        .HasForeignKey("basicId");

                    b.HasOne("AmpRageRepo.Models.Technical", "technical")
                        .WithMany()
                        .HasForeignKey("technicalId");
                });

            modelBuilder.Entity("AmpRageRepo.Models.Link", b =>
                {
                    b.HasOne("AmpRageRepo.Models.Data")
                        .WithMany("links")
                        .HasForeignKey("DataId");
                });

            modelBuilder.Entity("AmpRageRepo.Models.RootObject", b =>
                {
                    b.HasOne("AmpRageRepo.Models.Data", "data")
                        .WithMany()
                        .HasForeignKey("dataId");
                });

            modelBuilder.Entity("AmpRageRepo.Models.Technical", b =>
                {
                    b.HasOne("AmpRageRepo.Models.Data3", "data")
                        .WithMany()
                        .HasForeignKey("dataId");
                });
#pragma warning restore 612, 618
        }
    }
}
